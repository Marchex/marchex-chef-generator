# require "bundler/setup"

task :default => [:list]

desc "List all the tasks."
task :list do
  puts "Tasks: \n- #{Rake::Task.tasks.join("\n- ")}"
end

desc "Check for (and resolve) required dependencies."
task :check do
  sh "bundle check || bundle install"
end

desc "Bundle update."
task :update do
  sh "bundle update"
end

desc "Update rubocop and foodcritic configs from GitHub."
task :"lint-update" do
    sh "curl --fail --silent --connect-timeout 2 --max-time 5 -o .rubocop.yml\
         'https://github.marchex.com/raw/marchex-chef/marchex-chef-generator/master/skel/files/default/rubocop.yml'\
       || echo 'Failed to update Rubocop config.'", verbose: false
    sh "curl --fail --silent --connect-timeout 2 --max-time 5 -o .foodcritic\
        'https://github.marchex.com/raw/marchex-chef/marchex-chef-generator/master/skel/files/default/foodcritic'\
       || echo 'Failed to update Foodcritic config.'", verbose: false
end

desc "Run chefspec tests."
task :chefspec do
  Rake::Task[:check].execute
  sh "bundle exec rspec spec"
end

desc "Run foodcritic."
task :foodcritic do
  Rake::Task[:check].execute
  sh "bundle exec foodcritic ." # runs all built-in foodcritic rules
  sh "bundle exec foodcritic . -G -t marchex_base" # marchex-specific rules
end

desc "Run rubocop."
task :rubocop do
  Rake::Task[:check].execute
  sh "bundle exec rubocop ."
end

desc "Run validation tests."
task :lint do
  Rake::Task[:"lint-update"].execute
  Rake::Task[:rubocop].execute
  Rake::Task[:foodcritic].execute
end

desc "Run unit tests."
task :unit do
  Rake::Task[:lint].execute
  Rake::Task[:chefspec].execute
end

desc "Clean up build."
task :clean do
  # only delete lockfiles if they are not in git
  sh <<-eos, verbose: false
  lockfiles_to_delete=("Berksfile.lock" "Gemfile.lock")
  for lockfile in ${lockfiles_to_delete[@]}
  do
      if [[ -e "$lockfile" ]]; then
          git ls-files ${lockfile} | grep . >/dev/null
          err=$?
          if [[ "$err" != 0 ]]; then
              echo "deleting $lockfile"
              set -e
              rm "$lockfile"
              set +e
          fi
      fi
  done
  exit 0
  eos
end

desc "Really clean up build."
task :realclean do
  Rake::Task[:clean].execute
  sh 'rm -rf .vendor'
end
