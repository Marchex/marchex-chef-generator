# require "bundler/setup"

task :default => [:list]

desc "List all the tasks."
task :list do
    puts "Tasks: \n- #{Rake::Task.tasks.join("\n- ")}"
end

desc "Check for (and resolve) required dependencies."
task :check do
  sh "bundle check || bundle install"
end

desc "Run chefspec tests."
task :chefspec do
    Rake::Task[:check].execute
    sh "bundle exec rspec spec"
end

desc "Run foodcritic."
task :foodcritic do
    Rake::Task[:check].execute
    sh "bundle exec foodcritic ." # runs all built-in foodcritic rules
    sh "bundle exec foodcritic . -G -t marchex_base" # marchex-specific rules
end

desc "Run rubocop."
task :rubocop do
    Rake::Task[:check].execute
    sh "bundle exec rubocop ."
end

desc "Run validation tests."
task :lint do
  Rake::Task[:rubocop].execute
  Rake::Task[:foodcritic].execute
end

desc "Run unit tests."
task :unit do
  Rake::Task[:lint].execute
  Rake::Task[:chefspec].execute
end

desc "Run delivery verify tests."
task :dverify do
  verbose(false) do
    sh <<-EOS
    changes="$(git status --porcelain)";
    if [[ ! -z "$changes" ]]; then
      echo $'You have uncommitted changes:\n' $changes $'\n';
      while true; do
        read -p "Continue? [yN] " yn
        case $yn in
          [Yy]* ) break;;
          * ) exit;;
        esac
      done
    echo delivery job -l verify 'syntax lint unit'
    delivery job -l verify 'syntax lint unit'
    fi
    EOS
  end
end

desc "Run delivery tests."
task :delivery do
  Rake::Task[:dverify].execute
end
