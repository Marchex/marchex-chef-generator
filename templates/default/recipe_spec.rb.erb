#
# Cookbook Name:: <%= cookbook_name %>
# Spec:: default
#
<%= license_description('#') %>

require 'spec_helper'

describe '<%= cookbook_name %>::<%= recipe_name %>' do
  context 'When all attributes are default, on Ubuntu 12.04' do
<%= "    include ChefVault::TestFixtures.rspec_shared_context" if ( defined?(context.include_chef-vault_examples) && (context.include_chef-vault_examples == true) ) -%>
    let(:chef_run) do
      runner = ChefSpec::SoloRunner.new(platform: 'ubuntu', version: '12.04')
      runner.converge(described_recipe)
    end

    it 'converges successfully' do
      expect { chef_run }.to_not raise_error
    end
    <% if ( defined?(context.include_chef-vault_examples) && (context.include_chef-vault_examples == true) ) -%>
    it 'creates the super secret file successfully' do
      expect(chef_run).to create_template('/tmp/chef-vault_secrets.conf').with(
        user:       'root',
        group:      'root',
        mode:       '0400',
        sensitive:  true
      )
      expect(chef_run).to render_file('/tmp/chef-vault_secrets.conf').with_content { |content|
        expect(content).to include("username: my_super_secret_username")
        expect(content).to include("password: my_super_secret_password")
      }
    end
  <% end -%>
  end
end
